import java.io.*;
import java.util.* ;

import java.util.ArrayList;

public class Solution {
	public static int subarraysXor(ArrayList<Integer> arr, int x) {
		HashMap<Integer, Integer> map = new HashMap<>(); //prefix xor<->count map
		map.put(0, 1); 		//count when xor1^xor2 == 0 where xor2 == xor1^x
		int n = arr.size();
		int xor1 = 0, count = 0;
		for(int i=0 ; i<n ; i++) {
			xor1 = xor1 ^ arr.get(i); 
			int xor2 = xor1 ^ x;			//if xor1^xor2 == x,
			if(map.containsKey(xor2)) {		//then xor1^x == xor2 
				count += map.get(xor2);		//so we look for xor2 in map
			}								//and add its count
			map.put(xor1, map.getOrDefault(xor1, 0) + 1);
		}
		return count;
	}
}
