import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{

	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> permutation) 
	{
		int n = permutation.size();
		int i = n-2;
		while(i >= 0 && permutation.get(i) >= permutation.get(i+1)) {
			i--;
		}
		if(i >= 0) {
			int j = n-1;
			while(j > i && permutation.get(j) <= permutation.get(i)) {
				j--;
			}
			swap(i, j, permutation);
		}
		reverse(i+1, n-1, permutation);
		return permutation;
	}

	public static void swap(int i, int j, ArrayList<Integer> permutation) {
		int num1 = permutation.get(i);
		int num2 = permutation.get(j);
		permutation.set(i, num2);
		permutation.set(j, num1);
	}
  
	public static void reverse(int i, int j, ArrayList<Integer> permutation) {
		while(i < j) {
			swap(i, j, permutation);
			i++;
			j--;
		}
	}
  
}
